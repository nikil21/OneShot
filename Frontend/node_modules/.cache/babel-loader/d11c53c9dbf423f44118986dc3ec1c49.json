{"ast":null,"code":"var _jsxFileName = \"/home/nikilesh/Desktop/MERN stack/Oneshot/frontend/src/components/dashboard.js\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = {\n  labels: ['Tamil Nadu', 'Maharashtra', 'Uttar Pradesh', 'Karnataka', 'Telangana', 'Other states'],\n  datasets: [{\n    label: '# of Colleges',\n    data: [21, 8, 8, 7, 6, 50],\n    backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n    borderWidth: 1\n  }]\n};\n\nconst Dashboard = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"Colleges distribution among states.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n    data: data,\n    options: {\n      title: {\n        display: true,\n        text: 'Colleges per state',\n        fontSize: 20\n      },\n      legend: {\n        display: true,\n        position: 'right'\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\n_c = Dashboard;\nvar myDoughnutChart = new Chart(ctx).Doughnut(data);\n\ndocument.getElementById(\"myChart\").onclick = function (evt) {\n  var activePoints = myDoughnutChart.getSegmentsAtEvent(evt);\n  /* this is where we check if event has keys which means is not empty space */\n\n  if (Object.keys(activePoints).length > 0) {\n    var label = activePoints[0][\"label\"];\n    var value = activePoints[0][\"value\"];\n    var url = \"http://example.com/?label=\" + label + \"&value=\" + value;\n    /* process your url ... */\n  }\n};\n\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/nikilesh/Desktop/MERN stack/Oneshot/frontend/src/components/dashboard.js"],"names":["React","Doughnut","Chart","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","Dashboard","title","display","text","fontSize","legend","position","myDoughnutChart","ctx","document","getElementById","onclick","evt","activePoints","getSegmentsAtEvent","Object","keys","length","value","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,KAAT,QAAsB,UAAtB;;;AAGA,MAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CAAC,YAAD,EAAe,aAAf,EAA8B,eAA9B,EAA+C,WAA/C,EAA4D,WAA5D,EAAyE,cAAzE,CADG;AAEXC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,eADT;AAEEH,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAI,CAAJ,EAAM,CAAN,EAAQ,CAAR,EAAU,CAAV,EAAY,EAAZ,CAFR;AAGEI,IAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,EAKf,0BALe,EAMf,yBANe,CAHnB;AAWEC,IAAAA,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,EAGX,uBAHW,EAIX,uBAJW,EAKX,wBALW,EAMX,uBANW,CAXf;AAmBEC,IAAAA,WAAW,EAAE;AAnBf,GADQ;AAFC,CAAb;;AA2BA,MAAMC,SAAS,GAAG,mBAChB;AAAA,0BACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,eAIE,QAAC,QAAD;AACI,IAAA,IAAI,EAAEP,IADV;AAEI,IAAA,OAAO,EAAE;AACLQ,MAAAA,KAAK,EAAC;AACJC,QAAAA,OAAO,EAAC,IADJ;AAEJC,QAAAA,IAAI,EAAC,oBAFD;AAGJC,QAAAA,QAAQ,EAAC;AAHL,OADD;AAMLC,MAAAA,MAAM,EAAC;AACLH,QAAAA,OAAO,EAAC,IADH;AAELI,QAAAA,QAAQ,EAAC;AAFJ;AANF;AAFb;AAAA;AAAA;AAAA;AAAA,UAJF;AAAA,gBADF;;KAAMN,S;AAyBN,IAAIO,eAAe,GAAG,IAAIf,KAAJ,CAAUgB,GAAV,EAAejB,QAAf,CAAwBE,IAAxB,CAAtB;;AAEAgB,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,OAAnC,GAA6C,UAASC,GAAT,EAAa;AACtD,MAAIC,YAAY,GAAGN,eAAe,CAACO,kBAAhB,CAAmCF,GAAnC,CAAnB;AAEA;;AACA,MAAGG,MAAM,CAACC,IAAP,CAAYH,YAAZ,EAA0BI,MAA1B,GAAmC,CAAtC,EACA;AACI,QAAIrB,KAAK,GAAGiB,YAAY,CAAC,CAAD,CAAZ,CAAgB,OAAhB,CAAZ;AACA,QAAIK,KAAK,GAAGL,YAAY,CAAC,CAAD,CAAZ,CAAgB,OAAhB,CAAZ;AACA,QAAIM,GAAG,GAAG,+BAA+BvB,KAA/B,GAAuC,SAAvC,GAAmDsB,KAA7D;AACA;AACH;AACJ,CAXD;;AAaA,eAAelB,SAAf","sourcesContent":["import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart } from 'chart.js'\n\n\nconst data = {\n  labels: ['Tamil Nadu', 'Maharashtra', 'Uttar Pradesh', 'Karnataka', 'Telangana', 'Other states' ],\n  datasets: [\n    {\n      label: '# of Colleges',\n      data: [21,8,8,7,6,50],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)',\n      ],\n      borderWidth: 1,\n    },\n  ],\n};\n\nconst Dashboard = () => (\n  <>\n    <div className='header'>\n      <h3 className='title'>Colleges distribution among states.</h3>\n    </div>\n    <Doughnut \n        data={data}\n        options={{\n            title:{\n              display:true,\n              text:'Colleges per state',\n              fontSize:20\n            },\n            legend:{\n              display:true,\n              position:'right'\n            },\n\n         }} />\n    \n    \n  </>\n\n);\n\nvar myDoughnutChart = new Chart(ctx).Doughnut(data);\n\ndocument.getElementById(\"myChart\").onclick = function(evt){\n    var activePoints = myDoughnutChart.getSegmentsAtEvent(evt);\n\n    /* this is where we check if event has keys which means is not empty space */       \n    if(Object.keys(activePoints).length > 0)\n    {\n        var label = activePoints[0][\"label\"];\n        var value = activePoints[0][\"value\"];\n        var url = \"http://example.com/?label=\" + label + \"&value=\" + value\n        /* process your url ... */\n    }\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}