{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport const scrollToTop = () => window.scrollTo({\n  top: 0,\n  behavior: \"smooth\"\n});\n\nconst throttle = (callback, sleepTime) => {\n  let time = Date.now();\n  return (...args) => {\n    if (time + sleepTime - Date.now() < 0) {\n      callback(...args);\n      time = Date.now();\n    }\n  };\n};\n\nexport const useScroll = () => {\n  _s();\n\n  const [scrollPosition, setScrollPosition] = useState(window.scrollY);\n  const updateScrollPosition = throttle(() => {\n    setScrollPosition(window.scrollY);\n  }, 100);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", updateScrollPosition);\n    return () => window.removeEventListener(\"scroll\", updateScrollPosition);\n  }, [updateScrollPosition]);\n  return scrollPosition;\n};\n\n_s(useScroll, \"2zNaFyFotj3DcDxqQa3ajWEZTkE=\");","map":{"version":3,"sources":["/home/nikilesh/Desktop/MERN stack/Oneshot/frontend/src/helpers/scroll.js"],"names":["useEffect","useState","scrollToTop","window","scrollTo","top","behavior","throttle","callback","sleepTime","time","Date","now","args","useScroll","scrollPosition","setScrollPosition","scrollY","updateScrollPosition","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,WAAW,GAAG,MACzBC,MAAM,CAACC,QAAP,CAAgB;AACdC,EAAAA,GAAG,EAAE,CADS;AAEdC,EAAAA,QAAQ,EAAE;AAFI,CAAhB,CADK;;AAMP,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACxC,MAAIC,IAAI,GAAGC,IAAI,CAACC,GAAL,EAAX;AAEA,SAAO,CAAC,GAAGC,IAAJ,KAAa;AAClB,QAAIH,IAAI,GAAGD,SAAP,GAAmBE,IAAI,CAACC,GAAL,EAAnB,GAAgC,CAApC,EAAuC;AACrCJ,MAAAA,QAAQ,CAAC,GAAGK,IAAJ,CAAR;AACAH,MAAAA,IAAI,GAAGC,IAAI,CAACC,GAAL,EAAP;AACD;AACF,GALD;AAMD,CATD;;AAWA,OAAO,MAAME,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAACE,MAAM,CAACc,OAAR,CAApD;AAEA,QAAMC,oBAAoB,GAAGX,QAAQ,CAAC,MAAM;AAC1CS,IAAAA,iBAAiB,CAACb,MAAM,CAACc,OAAR,CAAjB;AACD,GAFoC,EAElC,GAFkC,CAArC;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACgB,gBAAP,CAAwB,QAAxB,EAAkCD,oBAAlC;AACA,WAAO,MAAMf,MAAM,CAACiB,mBAAP,CAA2B,QAA3B,EAAqCF,oBAArC,CAAb;AACD,GAHQ,EAGN,CAACA,oBAAD,CAHM,CAAT;AAKA,SAAOH,cAAP;AACD,CAbM;;GAAMD,S","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport const scrollToTop = () =>\n  window.scrollTo({\n    top: 0,\n    behavior: \"smooth\"\n  });\n\nconst throttle = (callback, sleepTime) => {\n  let time = Date.now();\n\n  return (...args) => {\n    if (time + sleepTime - Date.now() < 0) {\n      callback(...args);\n      time = Date.now();\n    }\n  };\n};\n\nexport const useScroll = () => {\n  const [scrollPosition, setScrollPosition] = useState(window.scrollY);\n\n  const updateScrollPosition = throttle(() => {\n    setScrollPosition(window.scrollY);\n  }, 100);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", updateScrollPosition);\n    return () => window.removeEventListener(\"scroll\", updateScrollPosition);\n  }, [updateScrollPosition]);\n\n  return scrollPosition;\n};"]},"metadata":{},"sourceType":"module"}