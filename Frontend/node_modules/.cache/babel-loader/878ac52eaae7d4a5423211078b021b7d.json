{"ast":null,"code":"var _jsxFileName = \"/home/nikilesh/Desktop/MERN stack/Oneshot/frontend/src/components/colleges.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CollegeDataService from \"../services/college\"; // import { Link } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst College = props => {\n  _s();\n\n  const initialCollegeState = {\n    id: null,\n    Name: \"\",\n    address: {},\n    Courses: \"\",\n    students: []\n  };\n  const [college, setCollege] = useState(initialCollegeState);\n  const year = \"Year founded\";\n\n  const getCollege = id => {\n    CollegeDataService.get(id).then(response => {\n      setCollege(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    getCollege(props.match.params.id);\n  }, [props.match.params.id]);\n\n  function between(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: college ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: college.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), college.Name, \", \", college.City, \", \", college.State, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 86\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Year Founded: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), between(1950, 2000), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 64\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Number of Students: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), 100, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Courses Offered: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), college.Courses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Similar Colleges \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: college.SimilarColleges.length > 0 ? college.SimilarColleges.map((similarcollege, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-4 pb-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"college Name: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 26\n                  }, this), similarcollege.Name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 78\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"City: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 26\n                  }, this), similarcollege.City, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 70\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"State: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 26\n                  }, this), similarcollege.State]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 20\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 18\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No Similar College data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \" Student Details \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: college.students.length > 0 ? college.students.map((student, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-4 pb-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Student Name: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 26\n                  }, this), student.first_name, \" \", student.last_name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 97\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Student id: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 26\n                  }, this), student.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 67\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Year of batch: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 26\n                  }, this), student.Year_of_batch, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 81\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Skills: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 26\n                  }, this), student.Skills]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 20\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 18\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No Student data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No college selected.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(College, \"RTF6tq58tUMjqG0k7CWMZGzIw+k=\");\n\n_c = College;\nexport default College;\n\nvar _c;\n\n$RefreshReg$(_c, \"College\");","map":{"version":3,"sources":["/home/nikilesh/Desktop/MERN stack/Oneshot/frontend/src/components/colleges.js"],"names":["React","useState","useEffect","CollegeDataService","College","props","initialCollegeState","id","Name","address","Courses","students","college","setCollege","year","getCollege","get","then","response","data","console","log","catch","e","match","params","between","min","max","Math","floor","random","City","State","SimilarColleges","length","map","similarcollege","index","student","first_name","last_name","Year_of_batch","Skills"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CollegeDataService from \"../services/college\";\n// import { Link } from \"react-router-dom\";\n\nconst College = props => {\n  const initialCollegeState = {\n    id: null,\n    Name: \"\",\n    address: {},\n    Courses: \"\",\n    students: [],\n  };\n  const [college, setCollege] = useState(initialCollegeState);\n\n  const year = \"Year founded\"\n\n  const getCollege = id => {\n    CollegeDataService.get(id)\n      .then(response => {\n        setCollege(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    getCollege(props.match.params.id);\n  }, [props.match.params.id]);\n\n  function between(min, max) {  \n    return Math.floor(\n      Math.random() * (max - min) + min\n    )\n  }\n\n  return (\n    <div>\n      {college ? (\n        <div>\n          <h5>{college.Name}</h5>\n          <p>\n            <strong>Address: </strong>{college.Name}, {college.City}, {college.State}<br/>\n            <strong>Year Founded: </strong>{between(1950,2000)}<br/>\n            <strong>Number of Students: </strong>{100}<br/>\n            <strong>Courses Offered: </strong>{college.Courses}\n          </p>\n          <h3> Similar Colleges </h3>\n          <div className=\"row\">\n            {college.SimilarColleges.length > 0 ? (\n             college.SimilarColleges.map((similarcollege, index) => {\n               return (\n                 <div className=\"col-lg-4 pb-1\" key={index}>\n                   <div className=\"card\">\n                     <div className=\"card-body\">\n                       <p className=\"card-text\">\n                         <strong>college Name: </strong>{similarcollege.Name}<br/>\n                         <strong>City: </strong>{similarcollege.City}<br/>\n                         <strong>State: </strong>{similarcollege.State}\n                       </p>\n                     </div>\n                   </div>\n                 </div>\n               );\n             })\n            ) : (\n            <div className=\"col-sm-4\">\n              <p>No Similar College data available.</p>\n            </div>\n            )}\n\n          </div>\n\n          <h4> Student Details </h4>\n          <div className=\"row\">\n            {college.students.length > 0 ? (\n             college.students.map((student, index) => {\n               return (\n                 <div className=\"col-lg-4 pb-1\" key={index}>\n                   <div className=\"card\">\n                     <div className=\"card-body\">\n                       <p className=\"card-text\">\n                         <strong>Student Name: </strong>{student.first_name} {student.last_name}<br/>\n                         <strong>Student id: </strong>{student.id}<br/>\n                         <strong>Year of batch: </strong>{student.Year_of_batch}<br/>\n                         <strong>Skills: </strong>{student.Skills}\n                       </p>\n                     </div>\n                   </div>\n                 </div>\n               );\n             })\n            ) : (\n            <div className=\"col-sm-4\">\n              <p>No Student data available.</p>\n            </div>\n            )}\n\n          </div>\n\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>No college selected.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default College;"]},"metadata":{},"sourceType":"module"}